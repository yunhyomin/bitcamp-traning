package day0628;

// 자바의 이름짓는 규칙
// 자바는 대소문자 구분이 엄격한 언어로써 
// 철자 뿐만이 아니라 대소문자가 틀려도 다른 코드가 된다.
// 자바에서 무언가 이름을 지을 때는 공통적으로 다음과 같은 규칙이 적용된다.
// 1. 공통 규칙
//    A. 낙타등 표기법(Camel back notation)
//       낙타등 표기법이란, 무언가 이름을 지을 때 
//       대소문자를 같이 쓰고 여러 단어로 이름을 지을 때
//       두번째 단어부터는 첫글자를 대문자로 적어주는 표기법이다.
//       예시: MemberController, myNumber, Ex03Naming
//    B. 뱀 표기법(Snake notation)
//       뱀 표기법이란, 무언가 이름을 지을 때
//       모두 대문자로 적는 경우에는 단어의 사이에 _을 너헝서
//       단어를 구분시키는 방법이다.
//       예시: MY_NUMBER, UNIT_PRICE
//    C. 무언가 이름을 지어줄 때에는 _를 제외한 특수문자는 사용할 수 없다.
//    D. 이름의 중간이나 끝에 숫자가 올 수 있지만 숫자로 이름을 시작할 수 없다.
//    E. 한글로 이름을 지어줄 수 있지만 절.대.로. 하지 말자
//    F. 자바에서는 내부적으로 다른 의미가 실행되는 50가지의 단어들이 있다.
//       해당 단어들을 우리가 예약어(keyword)라고 부르는데 
//       해당 단어들은 이름이 될 수 없다.
//       그러므로 50개를 외웁시다(내일 시험 봄)-> 옛날 옛적 이야기......
//       이클립스에서는 해당 키워드를 자주색으로 표시해준다.
//       만약 여러분들이 어떤 이름을 지었는데 자주색으로 표시되면?
//       동의어를 사용하거나 변형을 가해주면 된다!!!
// 2. 패키지
//    패키지는 여러 클래스들이 모여있는 하나의 모음집으로써
//    해당 클래스들의 성격을 설명할 수 있는 명사를 소문자로 시작하는 
//    낙타등 표기법으로 적어준다.
//    예시: controller, dao, dto ....
// 3. 클래스 
//    대문자로 시작하고 낙타등 표기법을 사용하는 명사
//    예시: Ex03Naming, MemberController
// 4. 메소드
//    소문자로 시작하고 낙타등 표기법을 사용하는 동사
//    메소드의 경우 프로그래밍의 규칙 상 반드시 이름 뒤에 ()가 붙는다.
//    예시: print(), selectAll()
// 5. 변수
//    소문자로 시작하고 낙타등 표기법을 사용하는 명사
//    예시: myNumber, memberController
// 6. 상수
//    뱀 표기법을 사용하는 명사
//    예시: PIE, UNIT_PRICE
public class Ex03Naming {
    // 아래의 이름을 보고 종류를 유추해보시오
    // 1. UnitController -> 클래스
    // 2. UNIT_CONTROLLER -> 상수
    // 3. unitControl() -> 메소드
    // 4. unitController -> 변수
}

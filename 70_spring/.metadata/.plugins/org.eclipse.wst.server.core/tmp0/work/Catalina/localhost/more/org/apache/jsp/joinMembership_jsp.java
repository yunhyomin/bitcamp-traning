/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.53
 * Generated at: 2022-02-15 16:51:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinMembership_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>회원가입 | more more</title>\n");
      out.write("<script src=https://code.jquery.com/jquery-3.6.0.min.js></script>\n");
      out.write("   	<link rel=\"stylesheet\" href=\"resources/css/styles.css\" type=\"text/css\" />\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div id=\"header\">\n");
      out.write("      <!-- <img src=\"/images/Naver_Logotype.svg.png\" width=\"200px\" /> -->\n");
      out.write("      <h1 class=\"loginLogo\"><span style=\"cursor:pointer;\" onclick=\"javascript:location.href='home.jsp'\"><img src=\"resources/images/logo2.png\"></span></h1>\n");
      out.write("    </div>\n");
      out.write("    <form action=\"signup.do\" method=\"post\" name=\"frm\">\n");
      out.write("      <div id=\"joinContainerWrapper\">\n");
      out.write("        <div class=\"joinContainer\">\n");
      out.write("          <div class=\"row_group\">\n");
      out.write("            <div>\n");
      out.write("              <h3><label class=\"join\" for=\"id\">아이디</label></h3>\n");
      out.write("              	<span class=\"ps_box\">\n");
      out.write("                <input\n");
      out.write("                  style=\"border:none;\"\n");
      out.write("                  type=\"text\"\n");
      out.write("                  id=\"id\"\n");
      out.write("                  name=\"user_id\"\n");
      out.write("                  maxlength=\"20\"\n");
      out.write("                  placeholder=\"아이디 입력\"\n");
      out.write("                  onblur=\"chk_id_email(this)\" />\n");
      out.write("                  <span class=\"step_url\">@###.com</span>\n");
      out.write("                </span>\n");
      out.write("              <span class=\"error\"></span>\n");
      out.write("            </div>\n");
      out.write("            <div>\n");
      out.write("              <h3><label class=\"join\" for=\"password\">비밀번호</label></h3>\n");
      out.write("                <input\n");
      out.write("                  class=\"ps_box\"\n");
      out.write("                  type=\"password\"\n");
      out.write("                  id=\"password\"\n");
      out.write("                  placeholder=\"비밀번호(5~20자리)\"/>\n");
      out.write("              <span class=\"error\"></span>\n");
      out.write("            </div>\n");
      out.write("            <div>\n");
      out.write("              <h3>\n");
      out.write("                <label class=\"join\" for=\"validatePassword\"\n");
      out.write("                  >비밀번호 재확인</label>\n");
      out.write("              </h3>\n");
      out.write("                <input\n");
      out.write("                  class=\"ps_box\"\n");
      out.write("                  type=\"password\"\n");
      out.write("                  id=\"validatePassword\"\n");
      out.write("                  name=\"user_pwd\"\n");
      out.write("                  placeholder=\"비밀번호 재입력\"/>\n");
      out.write("              <span class=\"error\"></span>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("          <div>\n");
      out.write("            <h3><label class=\"join\" for=\"name\">이름</label></h3>\n");
      out.write("            <input class=\"ps_box\" type=\"text\" id=\"name\" name=\"user_name\" placeholder=\"이름 입력\"/>\n");
      out.write("            <span class=\"error\"></span>\n");
      out.write("          </div>\n");
      out.write("          <div>\n");
      out.write("            <h3><label class=\"join\" for=\"birthday\">생년월일</label></h3>\n");
      out.write("            <input class=\"ps_box\" type=\"text\" id=\"birthday\"  name=\"user_birthday\" placeholder=\"생년월일 입력\"/>\n");
      out.write("            <span class=\"error\"></span>\n");
      out.write("          </div>\n");
      out.write("          <div>\n");
      out.write("            <h3><label class=\"join\" for=\"birthday\">휴대폰 번호</label></h3>\n");
      out.write("            <input class=\"ps_box\" type=\"text\" id=\"user_phone\"  name=\"user_phone\" placeholder=\"휴대폰 번호 입력\"/>\n");
      out.write("            <span class=\"error\"></span>\n");
      out.write("          </div>\n");
      out.write("          <!-- <div class=\"join_birthday\">\n");
      out.write("            <h3><label class=\"join\" for=\"year\">생년월일</label></h3>\n");
      out.write("            <div class=\"bir_wrap\">\n");
      out.write("              <div class=\"bir_yy\">\n");
      out.write("                  <input\n");
      out.write("                    class=\"ps_box\"\n");
      out.write("                    type=\"text\"\n");
      out.write("                    placeholder=\"년(4자)\"\n");
      out.write("                    id=\"year\"\n");
      out.write("                    name=\"user_name\"\n");
      out.write("                    maxlength=\"4\"\n");
      out.write("                  />\n");
      out.write("              </div>\n");
      out.write("                <div class=\"bir_mm\">\n");
      out.write("                  <span class=\"ps_box\">\n");
      out.write("                    <select id=\"month\" class=\"sel\">\n");
      out.write("                      <option value=\"월\" disabled>월</option>\n");
      out.write("                      <option value=\"1\">1</option>\n");
      out.write("                      <option value=\"2\">2</option>\n");
      out.write("                      <option value=\"3\">3</option>\n");
      out.write("                      <option value=\"4\">4</option>\n");
      out.write("                      <option value=\"5\">5</option>\n");
      out.write("                      <option value=\"6\">6</option>\n");
      out.write("                      <option value=\"7\">7</option>\n");
      out.write("                      <option value=\"8\">8</option>\n");
      out.write("                      <option value=\"9\">9</option>\n");
      out.write("                      <option value=\"10\">10</option>\n");
      out.write("                      <option value=\"11\">11</option>\n");
      out.write("                      <option value=\"12\">12</option>\n");
      out.write("                    </select>\n");
      out.write("                  </span>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"bir_dd\">\n");
      out.write("                    <input\n");
      out.write("                      class=\"ps_box\"\n");
      out.write("                      type=\"text\"\n");
      out.write("                      placeholder=\"일\"\n");
      out.write("                      id=\"date\"\n");
      out.write("                      maxlength=\"2\"\n");
      out.write("                    />\n");
      out.write("                </div>\n");
      out.write("              </div>\n");
      out.write("              <span class=\"error\"></span>\n");
      out.write("            </div> -->\n");
      out.write("\n");
      out.write("            <div>\n");
      out.write("              <h3><label class=\"join sel\" for=\"gender\">성별</label></h3>\n");
      out.write("              <span class=\"ps_box\">\n");
      out.write("                <select id=\"gender\" name=\"user_gender\">\n");
      out.write("                  <option selected value=\"noneGender\">성별</option>\n");
      out.write("                  <option value=\"남\">남</option>\n");
      out.write("                  <option value=\"여\">여</option>\n");
      out.write("                  <option value=\"genderUnchecked\">선택 안함</option>\n");
      out.write("                </select>\n");
      out.write("              </span>\n");
      out.write("              <span class=\"error\"></span>\n");
      out.write("            </div>\n");
      out.write("            <div>\n");
      out.write("            	<h3><label class=\"join\">주소</label></h3>\n");
      out.write("				<input class=\"d_btn\" type=\"button\" onclick=\"FindAddrDaumPostcode()\" value=\"우편번호 찾기\"><br>\n");
      out.write("            	<input type=\"text\" id=\"userPostcode\" name=\"user_address_number\" class=\"ps_box\" placeholder=\"우편번호\">\n");
      out.write("				<input type=\"text\" id=\"userAddress\" name=\"user_address\" class=\"ps_box\" placeholder=\"주소\">\n");
      out.write("				<input type=\"text\" id=\"userDetailAddress\" class=\"ps_box\"  placeholder=\"상세주소\">\n");
      out.write("            </div>\n");
      out.write("            <div>\n");
      out.write("              <h3>\n");
      out.write("                <label class=\"join\" for=\"email\">본인 확인 이메일</label>\n");
      out.write("              </h3>\n");
      out.write("                <input class=\"ps_box\" type=\"email\" placeholder=\"선택입력\" id=\"email\" name=\"user_email\" onblur=\"chk_id_email(this)\"/>\n");
      out.write("                <span class=\"error\"></span>\n");
      out.write("            </div>\n");
      out.write("            <!-- <div id=\"mobDiv\">\n");
      out.write("              <h3><label for=\"phone\">휴대전화</label></h3>\n");
      out.write("              <span class=\"ps_box\">\n");
      out.write("                <select class=\"sel\" name=\"phone\">\n");
      out.write("                  <option>대한민국 +82</option>\n");
      out.write("                </select></span>\n");
      out.write("              <div class=\"mobile_area\" id=\"box_space\">\n");
      out.write("              <span class=\"ps_box\">\n");
      out.write("                <input type=\"tel\" placeholder=\"전화번호 입력\" id=\"phone\" />\n");
      out.write("              </span>\n");
      out.write("              <a href=\"#\" class=\"btn_verify btn_primary\" id=\"btnSend\" role=\"button\">\n");
      out.write("                <span class>인증번호 받기</span>\n");
      out.write("              </a>\n");
      out.write("            </div>\n");
      out.write("              <div class=\"ps_box\" id=\"box_space\">\n");
      out.write("                <input\n");
      out.write("                  type=\"tel\"\n");
      out.write("                  placeholder=\"인증번호를 입력하세요\"\n");
      out.write("                  id=\"validatePhone\"\n");
      out.write("                  maxlength=\"4\"\n");
      out.write("                />\n");
      out.write("              </div>\n");
      out.write("              <span class=\"error\"></span>\n");
      out.write("            </div> -->\n");
      out.write("            <div class=\"btn_area\">\n");
      out.write("              <button id=\"btnJoin\" class=\"btn_type btn_primary\">\n");
      out.write("                <span>가입하기</span>\n");
      out.write("              </button>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </form>\n");
      out.write("    <div id=\"joinFooter\">@ moremore Corp.</div>\n");
      out.write("    <script>\n");
      out.write(" // 변수 선언\n");
      out.write("    const id = document.querySelector(\"#id\");\n");
      out.write("    const password = document.querySelector(\"#password\");\n");
      out.write("    const validatePassword = document.querySelector(\"#validatePassword\");\n");
      out.write("    const name = document.querySelector(\"#name\");\n");
      out.write("    const year = document.querySelector(\"#year\");\n");
      out.write("    const month = document.querySelector(\"#month\");\n");
      out.write("    const date = document.querySelector(\"#date\");\n");
      out.write("    const gender = document.querySelector(\"#gender\");\n");
      out.write("    const email = document.querySelector(\"#email\");\n");
      out.write("    const phone = document.querySelector(\"#phone\");\n");
      out.write("    const validatePhone = document.querySelector(\"#validatePhone\");\n");
      out.write("    const error = document.querySelectorAll(\".error\");\n");
      out.write("\n");
      out.write("    // 이벤트 리스너\n");
      out.write("    id.addEventListener(\"input\", checkId);\n");
      out.write("    password.addEventListener(\"input\", checkPassword);\n");
      out.write("    validatePassword.addEventListener(\"input\", checkValidatePassword);\n");
      out.write("    name.addEventListener(\"input\", checkName);\n");
      out.write("    /* year.addEventListener(\"input\", checkBirth);\n");
      out.write("    month.addEventListener(\"input\", checkMonth);\n");
      out.write("    date.addEventListener(\"input\", checkDate); */\n");
      out.write("    gender.addEventListener(\"input\", checkGender);\n");
      out.write("    email.addEventListener(\"input\", checkEmail);\n");
      out.write("    /* phone.addEventListener(\"input\", checkPhone);\n");
      out.write("    validatePhone.addEventListener(\"input\", checkValidatePhone); */\n");
      out.write("\n");
      out.write("    // 함수 작성\n");
      out.write("    function checkId() {\n");
      out.write("      const korPattern = /[a-zA-Z0-9_-]{5,20}/;\n");
      out.write("      if (id.value === \"\") {\n");
      out.write("        error[0].innerHTML = \"아이디를 입력해주세요.\";\n");
      out.write("        error[0].style.color = \"red\";\n");
      out.write("      } else if (!korPattern.test(id.value)) {\n");
      out.write("        error[0].innerHTML =\n");
      out.write("          \"5~20자의 영문 소문자, 숫자와 특수기호(_),(-)만 사용 가능합니다.\";\n");
      out.write("        error[0].style.color = \"red\";\n");
      out.write("      } else if (korPattern.test(id.value)) {\n");
      out.write("        error[0].innerHTML = \"\";\n");
      out.write("        error[0].style.color = \"red\";\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function checkPassword() {\n");
      out.write("      const pwPattern = /[a-zA-Z0-9\\[\\]\\{\\}\\/\\(\\)\\.\\?\\<\\>!@#$%^&*]{8,16}/;\n");
      out.write("      if (password.value === \"\") {\n");
      out.write("        error[1].innerHTML = \"비밀번호를 입력해주세요.\";\n");
      out.write("        error[1].style.color = \"red\";\n");
      out.write("      } else if (pwPattern.test(password.value)) {\n");
      out.write("        error[1].innerHTML = \"\";\n");
      out.write("      } else if (!pwPattern.test(password.value)) {\n");
      out.write("        error[1].innerHTML = \"8~16자 영문 대 소문자, 숫자, 특수문자를 사용하세요.\";\n");
      out.write("        error[1].style.color = \"red\";\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function checkValidatePassword() {\n");
      out.write("      if (password.value == validatePassword.value) {\n");
      out.write("        error[2].innerHTML = \"\";\n");
      out.write("      } else if (password.value !== validatePassword.value) {\n");
      out.write("        error[2].innerHTML = \"비밀번호가 일치하지 않습니다.\";\n");
      out.write("        error[2].style.color = \"red\";\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function checkName() {\n");
      out.write("      const namePattern = /[a-zA-Zㄱ-ㅎ가-힣]/;\n");
      out.write("      if (namePattern.test(name.value)) {\n");
      out.write("        error[3].innerHTML = \"\";\n");
      out.write("        error[3].style.color = \"red\";\n");
      out.write("      } else if (!namePattern.test(name.value)) {\n");
      out.write("        error[3].innerHTML =\n");
      out.write("          \"한글과 영문 대 소문자를 사용하세요. (특수기호, 공백 사용 불가)\";\n");
      out.write("        error[3].style.color = \"red\";\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function checkBirth() {\n");
      out.write("      const yy = /[0-9]{4,4}/;\n");
      out.write("      if (yy.test(year.value)) {\n");
      out.write("        error[4].innerHTML = \"\";\n");
      out.write("      } else if (!yy.test(year.value)) {\n");
      out.write("        error[4].innerHTML = \"생년월일을 다시 확인해주세요.\";\n");
      out.write("        error[4].style.color = \"red\";\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // function checkMonth() {\n");
      out.write("    // }\n");
      out.write("\n");
      out.write("    function checkDate() {\n");
      out.write("      const dd = /[0-9]{2,2}/;\n");
      out.write("      if (dd.test(date.value)) {\n");
      out.write("        error[4].innerHTML = \"\";\n");
      out.write("      } else if (!dd.test(date.value)) {\n");
      out.write("        error[4].innerHTML = \"생년월일을 다시 확인해주세요.\";\n");
      out.write("        error[4].style.color = \"red\";\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function checkGender() {\n");
      out.write("      if (gender.value == \"noneGender\") {\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function checkEmail() {\n");
      out.write("      const emailPattern =\n");
      out.write("        /^([0-9a-zA-Z_\\.-]+)@([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){1,2}$/;\n");
      out.write("      if (emailPattern.test(email.value)) {\n");
      out.write("        error[6].innerHTML = \"\";\n");
      out.write("      } else if (!emailPattern.test(email.value)) {\n");
      out.write("        error[6].innerHTML = \"이메일 주소를 다시 확인해주세요.\";\n");
      out.write("      } \n");
      out.write("    }\n");
      out.write("    function checkPhone() {\n");
      out.write("      // const phonePattern = /\\d{2,3}-\\d{3,4}-\\d{4}/g;\n");
      out.write("      const phonePattern = /[0-9]{3}-[0-9]{3}-[0-9]{4}/;\n");
      out.write("      if (phonePattern.test(phone.value)) {\n");
      out.write("        error[7].innerHTML = \"\";\n");
      out.write("      } else if (!phonePattern.test(phone.value)) {\n");
      out.write("        error[7].innerHTML = \"인증이 필요합니다.\";\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("    // function checkValidatePhone() {}\n");
      out.write("\n");
      out.write("    </script>\n");
      out.write("    <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("	<script>\n");
      out.write("	function FindAddrDaumPostcode() {\n");
      out.write("	    new daum.Postcode({\n");
      out.write("	        oncomplete: function(data) {\n");
      out.write("	            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\n");
      out.write("	\n");
      out.write("	            // 각 주소의 노출 규칙에 따라 주소를 조합한다.\n");
      out.write("	            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\n");
      out.write("	            var addr = ''; // 주소 변수\n");
      out.write("	\n");
      out.write("	            //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\n");
      out.write("	            if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\n");
      out.write("	                addr = data.roadAddress;\n");
      out.write("	            } else { // 사용자가 지번 주소를 선택했을 경우(J)\n");
      out.write("	                addr = data.jibunAddress;\n");
      out.write("	            }\n");
      out.write("	\n");
      out.write("	            // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\n");
      out.write("	            if(data.userSelectedType === 'R'){\n");
      out.write("	                // 법정동명이 있을 경우 추가한다. (법정리는 제외)\n");
      out.write("	                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n");
      out.write("	                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\n");
      out.write("	                }\n");
      out.write("	                // 건물명이 있고, 공동주택일 경우 추가한다.\n");
      out.write("	                if(data.buildingName !== '' && data.apartment === 'Y'){\n");
      out.write("	                }\n");
      out.write("	            } \n");
      out.write("	            \n");
      out.write("	            // 우편번호와 주소 정보를 해당 필드에 넣는다.\n");
      out.write("	            document.getElementById('userPostcode').value = data.zonecode;\n");
      out.write("	            document.getElementById(\"userAddress\").value = addr;\n");
      out.write("	            // 커서를 상세주소 필드로 이동한다.\n");
      out.write("	            document.getElementById(\"userDetailAddress\").focus();\n");
      out.write("	        }\n");
      out.write("	    }).open();\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	// 태용\n");
      out.write("	// 아이디와 이메일 중복 확인\n");
      out.write("	chk_id_email = (e) => {\n");
      out.write("		let info = {};\n");
      out.write("		console.log(e);\n");
      out.write("		if (e === document.getElementById(\"id\")) {\n");
      out.write("			info.user_id = frm.user_id.value;	\n");
      out.write("		} else {\n");
      out.write("			info.user_email = frm.user_email.value; \n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		console.log(info.user_id);\n");
      out.write("		console.log(info.user_email);\n");
      out.write("		$.ajax(\"chkIdAndEmail.do\",{\n");
      out.write("			type: \"post\",\n");
      out.write("			data: JSON.stringify(info),\n");
      out.write("			dataType: \"JSON\",\n");
      out.write("			contentType: \"application/json\",\n");
      out.write("			success: (data) => {\n");
      out.write("				console.log(data.id);\n");
      out.write("				if (data.empty === \"empty\"){\n");
      out.write("					if (e === document.getElementById(\"id\")) {\n");
      out.write("						error[0].innerHTML = \"아이디를 입려해주세요!\";\n");
      out.write("						error[0].style.color = \"red\";\n");
      out.write("					} else {\n");
      out.write("						error[7].innerHTML = \"이메일을 입려해주세요!\";\n");
      out.write("						error[7].style.color = \"red\";\n");
      out.write("					}\n");
      out.write("				} else if (data.email === \"emptyEmail\") {\n");
      out.write("					error[7].innerHTML = \"좋은 이메일이네요!\";\n");
      out.write("					error[7].style.color = \"blue\";\n");
      out.write("					document.getElementById(\"btnJoin\").disabled = false;\n");
      out.write("				} else if (data.id === \"emptyId\") {\n");
      out.write("					error[0].innerHTML = \"좋은 아이디네요!\";\n");
      out.write("			        error[0].style.color = \"blue\";\n");
      out.write("					document.getElementById(\"btnJoin\").disabled = false;\n");
      out.write("				}  else if (data.id === \"notEmptyId\"){\n");
      out.write("					error[0].innerHTML = \"이미 존재하는 아이디입니다!\";\n");
      out.write("			        error[0].style.color = \"red\";\n");
      out.write("					frm.user_id.value = \"\";\n");
      out.write("					document.getElementById(\"btnJoin\").disabled = true;\n");
      out.write("				} else if (data.email === \"notEmptyEmail\") {\n");
      out.write("					error[7].innerHTML = \"사용할 수 없는 이메일입니다!\";\n");
      out.write("					error[7].style.color = \"red\";\n");
      out.write("					frm.user_email.value = \"\";\n");
      out.write("					document.getElementById(\"btnJoin\").disabled = true;\n");
      out.write("				} \n");
      out.write("			},\n");
      out.write("			error: (data, error, request, status,) => {\n");
      out.write("				alert(\"관리자에게 문의하세요. (02-2222-2222)\\n\" + data.empty + \"\\n\" + error + \"\\n\" + request + \"\\n\" + status);\n");
      out.write("				\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	}\n");
      out.write("	// 서브밋 빈칸 없이 쓰도록 처리\n");
      out.write("	window.onload = () => {\n");
      out.write("		document.getElementById(\"btnJoin\").onclick = chk_before_submit;\n");
      out.write("	}\n");
      out.write("	chk_before_submit = () => {\n");
      out.write("		if (frm.user_id.value.trim() === \"\") {\n");
      out.write("			alert(\"아이디를 입력해주세요.\");\n");
      out.write("			frm.user_id.focus();\n");
      out.write("			frm.user_id.value = \"\";\n");
      out.write("			return false;\n");
      out.write("		} else if (document.getElementById(\"password\").value.trim() == \"\" ) {\n");
      out.write("			alert(\"비밀번호를 입력해주세요.\");\n");
      out.write("			document.getElementById(\"password\").focus();\n");
      out.write("			document.getElementById(\"password\").value = \"\";\n");
      out.write("			return false;\n");
      out.write("		} else if (frm.user_pwd.value.trim() === \"\" ) {\n");
      out.write("			alert(\"비밀번호를 입력해주세요.\");\n");
      out.write("			frm.user_pwd.focus();\n");
      out.write("			frm.user_pwd.value = \"\";\n");
      out.write("			return false;\n");
      out.write("		} else if (frm.user_name.value.trim() === \"\") {\n");
      out.write("			alert(\"이름을 입력해주세요.\");\n");
      out.write("			frm.user_name.focus();\n");
      out.write("			frm.user_name.value = \"\";\n");
      out.write("			return false;\n");
      out.write("		} else if (frm.user_birthday.value.trim() === \"\") {\n");
      out.write("			alert(\"생일을 입력해주세요.\");\n");
      out.write("			frm.user_birthday.focus();\n");
      out.write("			frm.user_birthday.value = \"\";\n");
      out.write("			return false;\n");
      out.write("		} else if (frm.user_phone.value.trim() === \"\") {\n");
      out.write("			alert(\"핸드폰 번호를 입력해주세요.\");\n");
      out.write("			frm.user_phone.focus();\n");
      out.write("			frm.user_phone.value = \"\";\n");
      out.write("			return false;\n");
      out.write("		} else if (frm.user_gender.selected === false) {\n");
      out.write("			alert(\"성별을 선택해주세요.\");\n");
      out.write("			frm.user_gender.value = \"\";\n");
      out.write("			frm.user_gender.focus();\n");
      out.write("			return false;\n");
      out.write("		} else if (frm.user_address_number.value.trim() === \"\") {\n");
      out.write("			alert(\"우편번호를 입력해주세요.\");\n");
      out.write("			frm.user_address_number.focus();\n");
      out.write("			frm.user_address_number.value = \"\";\n");
      out.write("			return false;\n");
      out.write("		} else if (frm.user_address.value.trim() === \"\") {\n");
      out.write("			alert(\"주소를 입력해주세요.\");\n");
      out.write("			frm.user_address.focus();\n");
      out.write("			frm.user_address.value = \"\";\n");
      out.write("			return false;\n");
      out.write("		} else if (frm.user_email.value.trim() === \"\") {\n");
      out.write("			alert(\"이메일을 입력해주세요.\");\n");
      out.write("			frm.user_email.value = \"\";\n");
      out.write("			frm.user_email.focus();\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		frm.action=\"signup.do\";\n");
      out.write("		frm.submit();\n");
      out.write("	}\n");
      out.write("	</script>\n");
      out.write("  </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.53
 * Generated at: 2022-02-15 16:51:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class findPassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>비밀번호 찾기</title>\r\n");
      out.write("<script src=https://code.jquery.com/jquery-3.6.0.min.js></script>\r\n");
      out.write("<script>\r\n");
      out.write("	// 함수를 정의하고 실행하는거랑 함수를 바로 실행하는지 알아보기\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	function findPW_btn() {\r\n");
      out.write("		\r\n");
      out.write("		var RegExp = /^[a-zA-Z0-9]{4,12}$/; // 아이디 유효성 검사 (비밀번호도)\r\n");
      out.write("		var exptext = /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z0-9\\-]+/; // 이메일 유효성 검사\r\n");
      out.write("		var nameExp = /^[가-힣]{2,4}|[a-zA-Z]{2,10}\\s[a-zA-Z]{2,10}$/; // 이름 유효성 검사\r\n");
      out.write("		 \r\n");
      out.write("		var form = document.findPWForm\r\n");
      out.write("		if (!form.mid.value) {\r\n");
      out.write("			alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if (!RegExp.test(form.mid.value)) {\r\n");
      out.write("			alert(\"4~12자리 영문대소문자와 숫자로만 입력해주세요.\");\r\n");
      out.write("			form.mid.value == \"\";\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if (!form.mname.value) {\r\n");
      out.write("			alert(\"이름을 입력해주세요.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(nameExp.test(form.mname.value) == false) {\r\n");
      out.write("			alert(\"이름 형식이 맞지 않습니다. 다시 입력해주세요.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if (!form.mphone.value) {\r\n");
      out.write("			alert(\"전화번호을 입력해주세요.\")\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		form.submit();\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	// 전화번호 하이픈 처리\r\n");
      out.write("	function inputPhoneNumber(obj) {\r\n");
      out.write("		 var number = obj.value.replace(/[^0-9]/g, \"\");\r\n");
      out.write("		 var phone = \"\";\r\n");
      out.write("		 \r\n");
      out.write("		 if(number.length < 4) {\r\n");
      out.write("		        return number;\r\n");
      out.write("		    } else if(number.length < 7) {\r\n");
      out.write("		        phone += number.substr(0, 3);\r\n");
      out.write("		        phone += \"-\";\r\n");
      out.write("		        phone += number.substr(3);\r\n");
      out.write("		    } else if(number.length < 11) {\r\n");
      out.write("		        phone += number.substr(0, 3);\r\n");
      out.write("		        phone += \"-\";\r\n");
      out.write("		        phone += number.substr(3, 3);\r\n");
      out.write("		        phone += \"-\";\r\n");
      out.write("		        phone += number.substr(6);\r\n");
      out.write("		    } else {\r\n");
      out.write("		        phone += number.substr(0, 3);\r\n");
      out.write("		        phone += \"-\";\r\n");
      out.write("		        phone += number.substr(3, 4);\r\n");
      out.write("		        phone += \"-\";\r\n");
      out.write("		        phone += number.substr(7);\r\n");
      out.write("		    }\r\n");
      out.write("		    obj.value = phone;\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>비밀번호 찾기</h1>\r\n");
      out.write("	<div>\r\n");
      out.write("		<form action= \"findPW\" method=\"get\" id=\"findPWForm\" name=\"findPWForm\">\r\n");
      out.write("			<!-- <p>\r\n");
      out.write("				<button class=\"findId\">아이디찾기</button>\r\n");
      out.write("				<button class=\"findPassword\">비밀번호찾기</button>\r\n");
      out.write("			</p> -->\r\n");
      out.write("			<p>\r\n");
      out.write("				아이디: <input type=\"text\" name=\"mid\" name=\"mid\" placeholder=\"아이디 입력\">\r\n");
      out.write("			</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				이름: <input type=\"text\" id=\"mname\" name=\"mname\" placeholder=\"이름 입력\">\r\n");
      out.write("			</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				전화번호: <input type=\"text\" id=\"mphone\" name=\"mphone\" onkeyup=\"inputPhoneNumber(this);\" maxlength=\"13\"  placeholder=\"전화번호 '-' 없이 입력\">\r\n");
      out.write("			<!-- <input type=\"button\" name=\"본인인증\">인증요청 -->\r\n");
      out.write("			</p>\r\n");
      out.write("			<!-- <p>\r\n");
      out.write("				<input type=\"text\" id=\"memail\" name=\"memail\" placeholder=\"이메일입력\">\r\n");
      out.write("			</p> -->\r\n");
      out.write("			<p>\r\n");
      out.write("				<input type=\"button\" value=\"비밀번호찾기\" onclick=\"findPW_btn()\">\r\n");
      out.write("				<input type=\"button\" value=\"취소\" onclick=\"window.close()\">\r\n");
      out.write("			</p>	\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--  	$(function(){\r\n");
      out.write("		if($(\"#mid\").val() == \"\") {\r\n");
      out.write("			alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("			$(\"#mid\").focus;\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if ($(\"#mname\").val() ==\"\") {\r\n");
      out.write("			alert(\"이름을 입력해주세요.\");\r\n");
      out.write("			$(\"#mname\").focus;\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if($(\"#mphone\").val() == \"\") {\r\n");
      out.write("			alsert(\"전화번호를 입력해주세요.\");\r\n");
      out.write("			$(\"#mphone\").focus;\r\n");
      out.write("			return false;\r\n");
      out.write("		} \r\n");
      out.write("	});  -->");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
